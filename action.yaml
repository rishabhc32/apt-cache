name: 'apt-cache'
description: Cache Apt Packages
author: rishabhc32
branding:
  icon: archive
  color: orange
inputs:
  packages:
    description: List of packages to install and cache
    required: true
  path:
    description: Location to cache deb files
    required: false
    default: .aptcache
  run_update:
    description: Whether to run apt-get update
    required: false
    default: false
    type: boolean
runs:
  using: composite
  steps:
    - name: Install Update
      if: inputs.run_update == 'true'
      shell: bash
      run: |
        sudo apt-get update -yq

    - name: Setup Apt for caching
      id: setup-apt-cache
      shell: bash
      run: |
        versions=$(for pkg in ${{ inputs.packages }}; do 
          ver=$(apt-cache policy $pkg | grep Candidate | awk '{print $2}')
          echo "$pkg-$ver"
        done | sort)
        
        echo "Package versions: " $versions
        
        hash=$(echo "$versions" | tr '\n' '-' | sha256sum | cut -d ' ' -f1)
        echo "packages-hash=$hash" >> $GITHUB_OUTPUT

    - name: Cache deb files
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.path }}
        key: apt-cache-${{ steps.setup-apt-cache.outputs.packages-hash }}

    - name: Restore deb files from cache
      shell: bash
      run: |
        if compgen -G "${{ inputs.path }}/*.deb" > /dev/null; then
          echo "Attempting to restore cache from ${{ inputs.path }}"
          echo "Cache: restored"
          sudo cp -l ${{ inputs.path }}/*.deb /var/cache/apt/archives
        else
          echo "Cache: not restored"
        fi
        sudo apt-get install -yq ${{ inputs.packages }}

    - name: Save deb files to cache
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ${{ inputs.path }}
        sudo cp -l /var/cache/apt/archives/*.deb ${{ inputs.path }}
